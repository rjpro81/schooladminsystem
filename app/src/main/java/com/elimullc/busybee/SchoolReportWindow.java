
package com.elimullc.busybee;

import java.awt.print.PrinterException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFrame;

/**
 * The purpose of this class is to display the overall academic performance of the school
 * @author Ralph Julsaint
 */
public class SchoolReportWindow extends javax.swing.JFrame {
    private final String URL = "jdbc:derby://localhost:1527/schoolDB;create=false";
    private final String username = "julsaint";
    private final String password = "julsaint";
    /**
     * Creates new form SchoolReportWindow
     */
    public SchoolReportWindow() {
        super("School Report");
        initComponents();
        displayArea.setText(displaySchoolReport().toString());
        setFrame();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        displayArea = new javax.swing.JTextArea();
        printButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        displayArea.setEditable(false);
        displayArea.setColumns(20);
        displayArea.setRows(5);
        jScrollPane1.setViewportView(displayArea);

        printButton.setText("Print");
        printButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(printButton)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(34, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(printButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * This method prints the school report
     * @param evt 
     */
    private void printButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printButtonActionPerformed
        // TODO add your handling code here:
        try{
            displayArea.print();
        }
        catch(PrinterException e){
            System.err.println(e.getMessage());
        }
    }//GEN-LAST:event_printButtonActionPerformed
    List<Report> getClassReports(){
        List<Report> list = new ArrayList<>();
        try(Connection connection = DriverManager.getConnection(URL, username, password)){
            PreparedStatement classReportStatement = connection.prepareStatement("SELECT schoolName, readingAverage, mathAverage, scienceAverage, socialStudiesAverage FROM school, grades");
            ResultSet resultSet = classReportStatement.executeQuery();
            
            //database query to retrieve student grades
            while (resultSet.next()){
                list.add(new Report(
                resultSet.getString("schoolName"),
                resultSet.getDouble("readingAverage"),
                resultSet.getDouble("mathAverage"),
                resultSet.getDouble("scienceAverage"),
                resultSet.getDouble("socialStudiesAverage")));
            }   
        }
        catch(SQLException e){
            System.err.println(e.getMessage());
        }
        return list;
    }
    private StringBuilder displaySchoolReport(){
        StringBuilder stringBuilder = new StringBuilder();
        double calculatedReadingSum = 0.0;
        double calculatedMathSum = 0.0;
        double calculatedScienceSum = 0.0;
        double calculatedSocialStudiesSum = 0.0;
        double calculatedReadingAverage = 0.0;
        double calculatedMathAverage = 0.0;
        double calculatedScienceAverage = 0.0;
        double calculatedSocialStudiesAverage = 0.0;
        String schoolName = "";
        
        for (Report classReport : getClassReports()){
            schoolName = classReport.getSchoolName();
            calculatedReadingSum += classReport.getReadingAverages();
            calculatedMathSum += classReport.getMathAverages();
            calculatedScienceSum += classReport.getScienceAverages();
            calculatedSocialStudiesSum += classReport.getSocialStudiesAverages();
        }
        calculatedReadingAverage = calculatedReadingSum / getClassReports().size();
        calculatedMathAverage = calculatedMathSum / getClassReports().size();
        calculatedScienceAverage = calculatedScienceSum / getClassReports().size();
        calculatedSocialStudiesAverage = calculatedSocialStudiesSum / getClassReports().size();
        stringBuilder.append(String.format("School Year: 2018-2019%n%nSchool: %s%nReading: %.2f%nMath: %.2f%nScience: %.2f%nSocial Studies: %.2f%n", schoolName, calculatedReadingAverage, calculatedMathAverage, calculatedScienceAverage, calculatedSocialStudiesAverage));
        
        return stringBuilder;
    }
    
    /**
     * This method set the size, location, and visibility of JFrame
     */
    private void setFrame(){
        this.setLocationRelativeTo(null);
        this.setVisible(true);
        this.setResizable(false);
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea displayArea;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton printButton;
    // End of variables declaration//GEN-END:variables
}
