
package com.elimullc.busybee;

import java.awt.event.ActionEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.swing.*;

/**
 * The purpose of this class is to provide users with the ability to add
 * events to the school calendar.
 * @author Ralph Julsaint
 */
public class AddNewCalendarEventWindow extends JFrame {

    /**
     * Creates new form AddNewCalendarEventWindow
     */
    public AddNewCalendarEventWindow() {
        super("Add Event");
        initComponents();
        setFrame();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JLabel eventLabel = new JLabel();
        eventTextField = new JTextField();
        // Variables declaration - do not modify//GEN-BEGIN:variables
        JLabel dateLabel = new JLabel();
        dateTextField = new JTextField();
        JButton submitButton = new JButton();

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

        eventLabel.setText("Event:");

        dateLabel.setText("Date:");

        submitButton.setText("Submit");
        submitButton.addActionListener(this::submitButtonActionPerformed);

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                    .addComponent(submitButton)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                            .addComponent(dateLabel)
                            .addComponent(eventLabel))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                            .addComponent(eventTextField)
                            .addComponent(dateTextField, GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(eventLabel)
                    .addComponent(eventTextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(dateLabel)
                    .addComponent(dateTextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(submitButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Add the new calendar event after submission
     */
    private void submitButtonActionPerformed(ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        // TODO add your handling code here:
        int result;
        //insert calendar events into database
        //instance variables
        String URL = "jdbc:derby:schoolDB;create=false";
        String username = "julsaint";
        String password = "julsaint";
        try(Connection connection = DriverManager.getConnection(URL, username, password)){
            String addEvent = "INSERT INTO calendar (event, eventDate) VALUES (?, ?)";
            PreparedStatement addEventStatement = connection.prepareStatement(addEvent);
            addEventStatement.setString(1, eventTextField.getText());
            addEventStatement.setString(2, dateTextField.getText());
            int option = JOptionPane.showConfirmDialog(null, "Are you sure?", "Add Event", JOptionPane.YES_NO_OPTION);
            if (option == 0){
                result = addEventStatement.executeUpdate();
                if (result > 0){
                    JOptionPane.showMessageDialog(null, "Event submitted");
                    String event = String.format("%s: %s%n%n", dateTextField.getText(), eventTextField.getText());
                    BusyBeeMainApplicationWindow.getCalendarTextArea().append(event);
                    this.dispose();
                }
            }            
        }
        catch(SQLException e){
            System.err.println(e.getMessage());
        }
    }//GEN-LAST:event_submitButtonActionPerformed
    /**
     * This method sets the location, size, and close operation of the JFrame
     */
    private void setFrame(){
        this.setLocationRelativeTo(null);
        this.setVisible(true);
        this.setResizable(false);
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }


    private JTextField dateTextField;
    private JTextField eventTextField;
    // End of variables declaration//GEN-END:variables
}
